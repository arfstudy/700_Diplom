# Generated by Django 5.0.6 on 2024-06-18 19:42

import django.contrib.auth.models
import django.core.validators
import django.utils.timezone
import users.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='Электронная почта')),
                ('email_verify', models.BooleanField(default=False, verbose_name='Подтверждённая почта')),
                ('company', models.CharField(blank=True, max_length=40, null=True, verbose_name='Компания')),
                ('position', models.CharField(blank=True, choices=[('SL', 'Менеджер по продажам'), ('BR', 'Менеджер по закупкам')], max_length=2, null=True, verbose_name='Должность')),
                ('is_active', models.BooleanField(default=False, help_text='Указывает, следует ли считать этого пользователя активным.Снимите этот флажок вместо удаления учётной записи.', verbose_name='Действующий')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['last_name', 'first_name'],
            },
            managers=[
                ('persons', users.models.AppUserManager()),
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
